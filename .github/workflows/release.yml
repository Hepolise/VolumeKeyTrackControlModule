name: Publish Release

on: 
  workflow_dispatch:

jobs:
  call-build:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      build-type: release

  publish-release:
    runs-on: ubuntu-latest
    needs: call-build
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Build Artifacts    

      - name: Generate Dynamic Tag
        id: tag
        run: echo "TAG_NAME=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            Automatically generated release.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log Create Release Output
        run: echo "${{ steps.create_release.outputs.upload_url }}"

      - name: Upload APKs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Release Upload URL: ${!steps.create_release.outputs.upload_url}"
          for file in *.apk; do
            echo "Uploading $file..."
            upload_url="${{ steps.create_release.outputs.upload_url }}"
            echo "Extracted upload URL: $upload_url"
            # Clean up the URL
            clean_url=$(echo "$upload_url" | sed 's/{?name,label}//')
            echo "Cleaned upload URL: $clean_url"
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/vnd.android.package-archive" \
              --data-binary @"$file" \
              "$clean_url?name=$(basename "$file")"
          done
